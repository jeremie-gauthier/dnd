/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './../pages/__root'
import { Route as LoginImport } from './../pages/login'
import { Route as WsImport } from './../pages/_ws'
import { Route as WsLobbiesImport } from './../pages/_ws.lobbies'
import { Route as WsCreateLobbyImport } from './../pages/_ws.create-lobby'
import { Route as WsLobbyLobbyIdImport } from './../pages/_ws.lobby.$lobbyId'

// Create Virtual Routes

const WsGameGameIdLazyImport = createFileRoute('/_ws/game/$gameId')()

// Create/Update Routes

const LoginRoute = LoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const WsRoute = WsImport.update({
  id: '/_ws',
  getParentRoute: () => rootRoute,
} as any)

const WsLobbiesRoute = WsLobbiesImport.update({
  path: '/lobbies',
  getParentRoute: () => WsRoute,
} as any)

const WsCreateLobbyRoute = WsCreateLobbyImport.update({
  path: '/create-lobby',
  getParentRoute: () => WsRoute,
} as any)

const WsGameGameIdLazyRoute = WsGameGameIdLazyImport.update({
  path: '/game/$gameId',
  getParentRoute: () => WsRoute,
} as any).lazy(() =>
  import('./../pages/_ws.game.$gameId.lazy').then((d) => d.Route),
)

const WsLobbyLobbyIdRoute = WsLobbyLobbyIdImport.update({
  path: '/lobby/$lobbyId',
  getParentRoute: () => WsRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_ws': {
      id: '/_ws'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof WsImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/_ws/create-lobby': {
      id: '/_ws/create-lobby'
      path: '/create-lobby'
      fullPath: '/create-lobby'
      preLoaderRoute: typeof WsCreateLobbyImport
      parentRoute: typeof WsImport
    }
    '/_ws/lobbies': {
      id: '/_ws/lobbies'
      path: '/lobbies'
      fullPath: '/lobbies'
      preLoaderRoute: typeof WsLobbiesImport
      parentRoute: typeof WsImport
    }
    '/_ws/lobby/$lobbyId': {
      id: '/_ws/lobby/$lobbyId'
      path: '/lobby/$lobbyId'
      fullPath: '/lobby/$lobbyId'
      preLoaderRoute: typeof WsLobbyLobbyIdImport
      parentRoute: typeof WsImport
    }
    '/_ws/game/$gameId': {
      id: '/_ws/game/$gameId'
      path: '/game/$gameId'
      fullPath: '/game/$gameId'
      preLoaderRoute: typeof WsGameGameIdLazyImport
      parentRoute: typeof WsImport
    }
  }
}

// Create and export the route tree

interface WsRouteChildren {
  WsCreateLobbyRoute: typeof WsCreateLobbyRoute
  WsLobbiesRoute: typeof WsLobbiesRoute
  WsLobbyLobbyIdRoute: typeof WsLobbyLobbyIdRoute
  WsGameGameIdLazyRoute: typeof WsGameGameIdLazyRoute
}

const WsRouteChildren: WsRouteChildren = {
  WsCreateLobbyRoute: WsCreateLobbyRoute,
  WsLobbiesRoute: WsLobbiesRoute,
  WsLobbyLobbyIdRoute: WsLobbyLobbyIdRoute,
  WsGameGameIdLazyRoute: WsGameGameIdLazyRoute,
}

const WsRouteWithChildren = WsRoute._addFileChildren(WsRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof WsRouteWithChildren
  '/login': typeof LoginRoute
  '/create-lobby': typeof WsCreateLobbyRoute
  '/lobbies': typeof WsLobbiesRoute
  '/lobby/$lobbyId': typeof WsLobbyLobbyIdRoute
  '/game/$gameId': typeof WsGameGameIdLazyRoute
}

export interface FileRoutesByTo {
  '': typeof WsRouteWithChildren
  '/login': typeof LoginRoute
  '/create-lobby': typeof WsCreateLobbyRoute
  '/lobbies': typeof WsLobbiesRoute
  '/lobby/$lobbyId': typeof WsLobbyLobbyIdRoute
  '/game/$gameId': typeof WsGameGameIdLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_ws': typeof WsRouteWithChildren
  '/login': typeof LoginRoute
  '/_ws/create-lobby': typeof WsCreateLobbyRoute
  '/_ws/lobbies': typeof WsLobbiesRoute
  '/_ws/lobby/$lobbyId': typeof WsLobbyLobbyIdRoute
  '/_ws/game/$gameId': typeof WsGameGameIdLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/login'
    | '/create-lobby'
    | '/lobbies'
    | '/lobby/$lobbyId'
    | '/game/$gameId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | ''
    | '/login'
    | '/create-lobby'
    | '/lobbies'
    | '/lobby/$lobbyId'
    | '/game/$gameId'
  id:
    | '__root__'
    | '/_ws'
    | '/login'
    | '/_ws/create-lobby'
    | '/_ws/lobbies'
    | '/_ws/lobby/$lobbyId'
    | '/_ws/game/$gameId'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  WsRoute: typeof WsRouteWithChildren
  LoginRoute: typeof LoginRoute
}

const rootRouteChildren: RootRouteChildren = {
  WsRoute: WsRouteWithChildren,
  LoginRoute: LoginRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_ws",
        "/login"
      ]
    },
    "/_ws": {
      "filePath": "_ws.tsx",
      "children": [
        "/_ws/create-lobby",
        "/_ws/lobbies",
        "/_ws/lobby/$lobbyId",
        "/_ws/game/$gameId"
      ]
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/_ws/create-lobby": {
      "filePath": "_ws.create-lobby.tsx",
      "parent": "/_ws"
    },
    "/_ws/lobbies": {
      "filePath": "_ws.lobbies.tsx",
      "parent": "/_ws"
    },
    "/_ws/lobby/$lobbyId": {
      "filePath": "_ws.lobby.$lobbyId.tsx",
      "parent": "/_ws"
    },
    "/_ws/game/$gameId": {
      "filePath": "_ws.game.$gameId.lazy.tsx",
      "parent": "/_ws"
    }
  }
}
ROUTE_MANIFEST_END */
